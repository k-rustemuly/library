<!DOCTYPE html>
<html>
    <head>
        <title>{{title}}</title>
    </head>
    <style>
        #viewer {
        height: 100vh; 
    }
    </style>
    <script src='/assets/js/lib/webviewer.min.js'></script>
    <body>
        <div id='viewer' style="position: relative; overflow: hidden;"></div>
    </body>
    {# <script>
        var d = new WebViewer({
            path: '/assets/js/lib',
            licenseKey: 'eIxUH92VbxnbChA105KP',
            initialDoc: '{{file}}',
        }, document.getElementById('viewer'))
        .then(instance => {
            instance.setFitMode(instance.FitMode.FitWidth);
            instance.UI.disableFeatures([instance.UI.Feature.Print, instance.UI.Feature.Download]);
        });
    </script> #}
    <script>
    var url = '{{file}}';

// Loaded via <script> tag, create shortcut to access PDF.js exports.
var pdfjsLib = window['js/pdfjs/build/pdf'];

// Asynchronous download of PDF
var loadingTask = pdfjsLib.getDocument(url);
loadingTask.promise.then(function(pdf) {
  console.log('PDF loaded');
  
  // Fetch the first page
  var pageNumber = 1;
  pdf.getPage(pageNumber).then(function(page) {
    console.log('Page loaded');
    
    var scale = 1.5;
    var viewport = page.getViewport({scale: scale});

    // Prepare canvas using PDF page dimensions
    var canvas = document.getElementById('the-canvas');
    var context = canvas.getContext('2d');
    canvas.height = viewport.height;
    canvas.width = viewport.width;

    // Render PDF page into canvas context
    var renderContext = {
      canvasContext: context,
      viewport: viewport
    };
    var renderTask = page.render(renderContext);
    renderTask.promise.then(function () {
      console.log('Page rendered');
    });
  });
}, function (reason) {
  // PDF loading error
  console.error(reason);
});
    </script>
</html>
